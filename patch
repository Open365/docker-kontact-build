diff --git a/server/src/storage/dbinitializer.cpp b/server/src/storage/dbinitializer.cpp
index f319cb2..f80f8af 100644
--- a/server/src/storage/dbinitializer.cpp
+++ b/server/src/storage/dbinitializer.cpp
@@ -164,7 +164,7 @@ void DbInitializer::checkForeignKeys( const TableDescription &tableDescription )
             continue; // all good
           }
 
-          const QString statement = buildRemoveForeignKeyConstraintStatement( existingForeignKey, tableDescription );
+          const QString statement;// = buildRemoveForeignKeyConstraintStatement( existingForeignKey, tableDescription );
           if ( !statement.isEmpty() ) {
             akDebug() << "Found existing foreign constraint that doesn't match the schema:" << existingForeignKey.name
                       << existingForeignKey.column << existingForeignKey.refTable << existingForeignKey.refColumn;
@@ -172,7 +172,7 @@ void DbInitializer::checkForeignKeys( const TableDescription &tableDescription )
           }
         }
 
-        const QString statement = buildAddForeignKeyConstraintStatement( tableDescription, column );
+        const QString statement;// = buildAddForeignKeyConstraintStatement( tableDescription, column );
         if ( statement.isEmpty() ) { // not supported
           m_noForeignKeyContraints = true;
           return;
diff --git a/server/src/storage/dbintrospector_impl.cpp b/server/src/storage/dbintrospector_impl.cpp
index ba724cb..3c0c64b 100644
--- a/server/src/storage/dbintrospector_impl.cpp
+++ b/server/src/storage/dbintrospector_impl.cpp
@@ -56,11 +56,13 @@ QVector< DbIntrospector::ForeignKey > DbIntrospectorMySql::foreignKeyConstraints
   qb.addValueCondition( QLatin1String( "information_schema.KEY_COLUMN_USAGE.TABLE_SCHEMA" ), Query::Equals, m_database.databaseName() );
   qb.addValueCondition( QLatin1String( "information_schema.KEY_COLUMN_USAGE.TABLE_NAME" ), Query::Equals, tableName );
 
-  if ( !qb.exec() ) {
+  /*if ( !qb.exec() ) {
     throw DbException( qb.query() );
   }
+*/
 
   QVector<ForeignKey> result;
+/*
   while ( qb.query().next() ) {
     ForeignKey fk;
     fk.name = qb.query().value( 0 ).toString();
@@ -71,6 +73,7 @@ QVector< DbIntrospector::ForeignKey > DbIntrospectorMySql::foreignKeyConstraints
     fk.onDelete = qb.query().value( 5 ).toString();
     result.push_back( fk );
   }
+*/
 
   return result;
 }
